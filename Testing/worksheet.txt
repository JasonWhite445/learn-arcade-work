1. Write code to swap the values 25 and 40.

my_list = [55, 41, 52, 68, 45, 27, 40, 25, 37, 26]

answer:     element = my_list[7]
            my_list[7] = my_list[6]
            my_list[6] = element

2. Write code to swap the values 2 and 27.

my_list = [27, 32, 18,  2, 11, 57, 14, 38, 19, 91]

answer:     element = my_list[0]
            my_list[0] = my_list[1]
            my_list[1] = element

3. Why does the following code not work? Explain it, don't just list working code.

my_list = [70, 32, 98, 88, 92, 36, 81, 83, 87, 66]
temp = my_list[0]
my_list[1] = my_list[0]
my_list[0] = temp

answer:        This code will fail because element 0 will not switch to element 1
               you are not setting element 0 to anything new.

4. Show how the following numbers can be sorted using the selection sort.

97   74    8   98   47   62   12   11    0   60

0   74  8   98  47  62  12  11  97  60

0   8   74  98  47  62  12  11  97  60

0   8   11  98  47  62  12  74  97  60

0   8   11  12  47  62  98  74  97  60

0   8   11  12  47  62  98  74  97  60

0   8   11  12  47  60  98  74  97  62

0   8   11  12  47  60  62  74  97  98

0   8   11  12  47  60  62  74  97  98

0   8   11  12  47  60  62  74  97  98

0   8   11  12  47  60  62  74  97  98

5. Show how the following numbers can be sorted using the selection sort:

74   92   18   47   40   58    0   36   29   25

0   92  12  47  40  58  74  36  29  25

0   12  92  47  40  58  74  36  29  25

0   12  25  47  40  58  74  36  29  92

0   12  25  29  40  58  74  36  47  92

0   12  25  29  36  58  74  40  47  92

0   12  25  29  36  40  74  58  47  92

0   12  25  29  36  40  47  58  74  92

0   12  25  29  36  40  47  58  74  92

0   12  25  29  36  40  47  58  74  92

0   12  25  29  36  40  47  58  74  92

6. Show how the following numbers can be sorted using the INSERTION sort.

74   92   18   47   40   58    0   36   29   25

74   92   18   47   40   58    0   36   29   25

18  74  92  47  40  58  0   36  29  25

18  47  74  92  40  58  0   36  29  25

18  40  47  74  92  58  0   36  29  25

18  40  47  58  74  92  0   36  29  25

0   18  40  47  58  74  92  36  29  25

0   18  36  40  47  58  74  92  29  25

0   18  29  36  40  47  58  74  92  25

0   18  25  29  36  40  47  58  74  92

7. Show how the following numbers can be sorted using the insertion sort:

    37   11   14   50   24    7   17   88   99    9

11  37  14  50  24  7   17  88  99  9

11  14  37  50  24  7   17  88  99  9

11  14  37  50  24  7   17  88  99  9

11  14  24  37  50  7   17  88  99  9

7   11   14  24  37  50  17  88  99  9

7   11  14  17  24  37  50  88  99  9

7   11  14  17  24  37  50  88  99  9

7   11  14  17  24  37  50  88  99  9

7   9   11  14  17  24  37  50  88  99

8. Explain what `min_pos` does in the selection sort.

Is the smallest element that is indentified by the scan and replaces the current position.

9. Explain what `cur_pos` does in the selection sort.

The current element we are checking in the array.

10. Explain what `scan_pos` does in the selection sort.

Scans all the remaining elements in the list to compare to the current position from left to right.

11. Explain what `key_pos` and `key_value` are in the insertion sort.

key_pos is the element in the list we are checking and key_value is the numerical value of the element

12. Explain `scan_pos` in the insertion sort.

Scans all the remaining elements in the list to compare to the key position from right to left.

13.

import random


def selection_sort(my_list):
    """ Sort a list using the selection sort """

    outside_count = 0
    inside_count = 0
    # Loop through the entire array
    for cur_pos in range(len(my_list)):
        # Find the position that has the smallest number
        # Start with the current position
        min_pos = cur_pos
        outside_count += 1
        # Scan left to right (end of the list)
        for scan_pos in range(cur_pos + 1, len(my_list)):
            inside_count += 1
            # Is this position smallest?
            if my_list[scan_pos] < my_list[min_pos]:
                # It is, mark this position as the smallest
                min_pos = scan_pos

        # Swap the two values
        temp = my_list[min_pos]
        my_list[min_pos] = my_list[cur_pos]
        my_list[cur_pos] = temp
    print(outside_count, inside_count)

def insertion_sort(my_list):
    """ Sort a list using the insertion sort """

    insertion_outside = 0
    insertion_inside = 0

    # Start at the second element (pos 1).
    # Use this element to insert into the
    # list.
    for key_pos in range(1, len(my_list)):

        # Get the value of the element to insert
        key_value = my_list[key_pos]

        # Scan from right to the left (start of list)
        scan_pos = key_pos - 1
        insertion_outside += 1

        # Loop each element, moving them up until
        # we reach the position the
        while (scan_pos >= 0) and (my_list[scan_pos] > key_value):
            my_list[scan_pos + 1] = my_list[scan_pos]
            scan_pos = scan_pos - 1
            insertion_inside += 1

        # Everything's been moved out of the way, insert
        # the key into the correct location
        my_list[scan_pos + 1] = key_value
    print(insertion_outside, insertion_inside)

# This will point out a list
# For more information on the print formatting {:3}
# see the chapter on print formatting.
def print_list(my_list):
    for item in my_list:
        print(f"{item:3}", end="")
    print()


def main():
    # Create two lists of the same random numbers
    list_for_selection_sort = []
    list_for_insertion_sort = []
    list_size = 100
    for i in range(list_size):
        new_number = random.randrange(100)
        list_for_selection_sort.append(new_number)
        list_for_insertion_sort.append(new_number)

    # Print the original list
    print("Original List")
    print_list(list_for_selection_sort)

    # Use the selection sort and print the result
    print("Selection Sort")
    selection_sort(list_for_selection_sort)
    print_list(list_for_selection_sort)

    # Use the insertion sort and print the result
    print("Insertion Sort")
    insertion_sort(list_for_insertion_sort)
    print_list(list_for_insertion_sort)


main()

results:

selection sort:

outside loop = 100, inside loop = 4950

insertion sort:

outside loop = 99 inside loop = 2207










